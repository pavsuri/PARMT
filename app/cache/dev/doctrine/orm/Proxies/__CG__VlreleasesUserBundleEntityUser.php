<?php

namespace Proxies\__CG__\Vlreleases\UserBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \Vlreleases\UserBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'userName', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'password', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'empId', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'systemId', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'email', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'status', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'id', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'role', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'type', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'tasks', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'projects', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'reportingPersons', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'reportingLeads', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'personalProfile', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'workProfile', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'skills');
        }

        return array('__isInitialized__', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'userName', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'password', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'empId', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'systemId', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'email', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'status', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'id', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'role', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'type', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'tasks', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'projects', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'reportingPersons', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'reportingLeads', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'personalProfile', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'workProfile', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\User' . "\0" . 'skills');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setUserName($userName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserName', array($userName));

        return parent::setUserName($userName);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserName', array());

        return parent::getUserName();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmpId($empId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmpId', array($empId));

        return parent::setEmpId($empId);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmpId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmpId', array());

        return parent::getEmpId();
    }

    /**
     * {@inheritDoc}
     */
    public function setSystemId($systemId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSystemId', array($systemId));

        return parent::setSystemId($systemId);
    }

    /**
     * {@inheritDoc}
     */
    public function getSystemId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSystemId', array());

        return parent::getSystemId();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRole(\Vlreleases\UserBundle\Entity\Role $role = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRole', array($role));

        return parent::setRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getRole()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRole', array());

        return parent::getRole();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(\Vlreleases\UserBundle\Entity\Type $type = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function addTask(\Vlreleases\UserBundle\Entity\UserTask $tasks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTask', array($tasks));

        return parent::addTask($tasks);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTask(\Vlreleases\UserBundle\Entity\UserTask $tasks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTask', array($tasks));

        return parent::removeTask($tasks);
    }

    /**
     * {@inheritDoc}
     */
    public function getTasks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTasks', array());

        return parent::getTasks();
    }

    /**
     * {@inheritDoc}
     */
    public function addProject(\Vlreleases\UserBundle\Entity\Project $projects)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProject', array($projects));

        return parent::addProject($projects);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProject(\Vlreleases\UserBundle\Entity\Project $projects)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProject', array($projects));

        return parent::removeProject($projects);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjects()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjects', array());

        return parent::getProjects();
    }

    /**
     * {@inheritDoc}
     */
    public function addReportingPerson(\Vlreleases\UserBundle\Entity\User $reportingPersons)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReportingPerson', array($reportingPersons));

        return parent::addReportingPerson($reportingPersons);
    }

    /**
     * {@inheritDoc}
     */
    public function removeReportingPerson(\Vlreleases\UserBundle\Entity\User $reportingPersons)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeReportingPerson', array($reportingPersons));

        return parent::removeReportingPerson($reportingPersons);
    }

    /**
     * {@inheritDoc}
     */
    public function getReportingPersons()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReportingPersons', array());

        return parent::getReportingPersons();
    }

    /**
     * {@inheritDoc}
     */
    public function getReportingLeads()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReportingLeads', array());

        return parent::getReportingLeads();
    }

    /**
     * {@inheritDoc}
     */
    public function setPersonalProfile(\Vlreleases\UserBundle\Entity\UserPersonalProfile $personalProfile = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPersonalProfile', array($personalProfile));

        return parent::setPersonalProfile($personalProfile);
    }

    /**
     * {@inheritDoc}
     */
    public function getPersonalProfile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPersonalProfile', array());

        return parent::getPersonalProfile();
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkProfile(\Vlreleases\UserBundle\Entity\UserWorkProfile $workProfile = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkProfile', array($workProfile));

        return parent::setWorkProfile($workProfile);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkProfile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkProfile', array());

        return parent::getWorkProfile();
    }

    /**
     * {@inheritDoc}
     */
    public function addSkill(\Vlreleases\UserBundle\Entity\UserSkills $skills)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSkill', array($skills));

        return parent::addSkill($skills);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSkill(\Vlreleases\UserBundle\Entity\UserSkills $skills)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSkill', array($skills));

        return parent::removeSkill($skills);
    }

    /**
     * {@inheritDoc}
     */
    public function getSkills()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSkills', array());

        return parent::getSkills();
    }

    /**
     * {@inheritDoc}
     */
    public function addReportingLead(\Vlreleases\UserBundle\Entity\User $reportingLeads)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReportingLead', array($reportingLeads));

        return parent::addReportingLead($reportingLeads);
    }

    /**
     * {@inheritDoc}
     */
    public function removeReportingLead(\Vlreleases\UserBundle\Entity\User $reportingLeads)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeReportingLead', array($reportingLeads));

        return parent::removeReportingLead($reportingLeads);
    }

}
