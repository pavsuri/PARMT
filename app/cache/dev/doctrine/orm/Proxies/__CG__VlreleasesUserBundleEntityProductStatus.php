<?php

namespace Proxies\__CG__\Vlreleases\UserBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ProductStatus extends \Vlreleases\UserBundle\Entity\ProductStatus implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array('submittedTime' => NULL);



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {
        unset($this->submittedTime);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', array($name));

            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);
    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', array($name, $value));

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', array($name));

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\ProductStatus' . "\0" . 'startTime', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\ProductStatus' . "\0" . 'expectedEndTime', 'submittedTime', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\ProductStatus' . "\0" . 'id', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\ProductStatus' . "\0" . 'productDevice', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\ProductStatus' . "\0" . 'assignee', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\ProductStatus' . "\0" . 'product');
        }

        return array('__isInitialized__', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\ProductStatus' . "\0" . 'startTime', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\ProductStatus' . "\0" . 'expectedEndTime', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\ProductStatus' . "\0" . 'id', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\ProductStatus' . "\0" . 'productDevice', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\ProductStatus' . "\0" . 'assignee', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\ProductStatus' . "\0" . 'product');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ProductStatus $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->submittedTime);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setStartTime($startTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartTime', array($startTime));

        return parent::setStartTime($startTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartTime', array());

        return parent::getStartTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpectedEndTime($expectedEndTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpectedEndTime', array($expectedEndTime));

        return parent::setExpectedEndTime($expectedEndTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpectedEndTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpectedEndTime', array());

        return parent::getExpectedEndTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubmittedTime($submittedTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubmittedTime', array($submittedTime));

        return parent::setSubmittedTime($submittedTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubmittedTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubmittedTime', array());

        return parent::getSubmittedTime();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setAssignee(\Vlreleases\UserBundle\Entity\User $assignee = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAssignee', array($assignee));

        return parent::setAssignee($assignee);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssignee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssignee', array());

        return parent::getAssignee();
    }

    /**
     * {@inheritDoc}
     */
    public function setProduct(\Vlreleases\UserBundle\Entity\Product $product = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduct', array($product));

        return parent::setProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function getProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduct', array());

        return parent::getProduct();
    }

}
