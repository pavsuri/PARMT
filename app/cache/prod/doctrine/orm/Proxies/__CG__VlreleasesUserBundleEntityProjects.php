<?php

namespace Proxies\__CG__\Vlreleases\UserBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Projects extends \Vlreleases\UserBundle\Entity\Projects implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'user', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'createDate', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'startDate', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'endDate', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'projectStatus', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'svnPath', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'bugTool', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'bugToolLink', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'description', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'icon', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'lifeCycleStatus', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'billingStatus', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'billingType', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'billingCost', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'liveLink', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'pid', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'projectName', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'phase', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'client', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'platforms');
        }

        return array('__isInitialized__', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'user', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'createDate', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'startDate', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'endDate', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'projectStatus', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'svnPath', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'bugTool', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'bugToolLink', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'description', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'icon', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'lifeCycleStatus', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'billingStatus', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'billingType', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'billingCost', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'liveLink', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'pid', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'projectName', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'phase', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'client', '' . "\0" . 'Vlreleases\\UserBundle\\Entity\\Projects' . "\0" . 'platforms');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Projects $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setCreateDate($createDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreateDate', array($createDate));

        return parent::setCreateDate($createDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreateDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreateDate', array());

        return parent::getCreateDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartDate($startDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartDate', array($startDate));

        return parent::setStartDate($startDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartDate', array());

        return parent::getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndDate($endDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndDate', array($endDate));

        return parent::setEndDate($endDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndDate', array());

        return parent::getEndDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setSvnPath($svnPath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSvnPath', array($svnPath));

        return parent::setSvnPath($svnPath);
    }

    /**
     * {@inheritDoc}
     */
    public function getSvnPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSvnPath', array());

        return parent::getSvnPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setBugTool($bugTool)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBugTool', array($bugTool));

        return parent::setBugTool($bugTool);
    }

    /**
     * {@inheritDoc}
     */
    public function getBugTool()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBugTool', array());

        return parent::getBugTool();
    }

    /**
     * {@inheritDoc}
     */
    public function setBugToolLink($bugToolLink)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBugToolLink', array($bugToolLink));

        return parent::setBugToolLink($bugToolLink);
    }

    /**
     * {@inheritDoc}
     */
    public function getBugToolLink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBugToolLink', array());

        return parent::getBugToolLink();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setIcon($icon)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIcon', array($icon));

        return parent::setIcon($icon);
    }

    /**
     * {@inheritDoc}
     */
    public function getIcon()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIcon', array());

        return parent::getIcon();
    }

    /**
     * {@inheritDoc}
     */
    public function setLifeCycleStatus($lifeCycleStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLifeCycleStatus', array($lifeCycleStatus));

        return parent::setLifeCycleStatus($lifeCycleStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getLifeCycleStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLifeCycleStatus', array());

        return parent::getLifeCycleStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setBillingStatus($billingStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBillingStatus', array($billingStatus));

        return parent::setBillingStatus($billingStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getBillingStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBillingStatus', array());

        return parent::getBillingStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setBillingType($billingType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBillingType', array($billingType));

        return parent::setBillingType($billingType);
    }

    /**
     * {@inheritDoc}
     */
    public function getBillingType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBillingType', array());

        return parent::getBillingType();
    }

    /**
     * {@inheritDoc}
     */
    public function setBillingCost($billingCost)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBillingCost', array($billingCost));

        return parent::setBillingCost($billingCost);
    }

    /**
     * {@inheritDoc}
     */
    public function getBillingCost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBillingCost', array());

        return parent::getBillingCost();
    }

    /**
     * {@inheritDoc}
     */
    public function setLiveLink($liveLink)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLiveLink', array($liveLink));

        return parent::setLiveLink($liveLink);
    }

    /**
     * {@inheritDoc}
     */
    public function getLiveLink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLiveLink', array());

        return parent::getLiveLink();
    }

    /**
     * {@inheritDoc}
     */
    public function setPid($pid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPid', array($pid));

        return parent::setPid($pid);
    }

    /**
     * {@inheritDoc}
     */
    public function getPid()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getPid();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPid', array());

        return parent::getPid();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectName(\Vlreleases\UserBundle\Entity\Project $projectName = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectName', array($projectName));

        return parent::setProjectName($projectName);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectName', array());

        return parent::getProjectName();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhase(\Vlreleases\UserBundle\Entity\Phase $phase = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhase', array($phase));

        return parent::setPhase($phase);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhase()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhase', array());

        return parent::getPhase();
    }

    /**
     * {@inheritDoc}
     */
    public function setClient(\Vlreleases\UserBundle\Entity\Client $client = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClient', array($client));

        return parent::setClient($client);
    }

    /**
     * {@inheritDoc}
     */
    public function getClient()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClient', array());

        return parent::getClient();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Vlreleases\UserBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlatforms(\Vlreleases\UserBundle\Entity\Platforms $platforms = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlatforms', array($platforms));

        return parent::setPlatforms($platforms);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlatforms()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlatforms', array());

        return parent::getPlatforms();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectStatus($projectStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectStatus', array($projectStatus));

        return parent::setProjectStatus($projectStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectStatus', array());

        return parent::getProjectStatus();
    }

}
